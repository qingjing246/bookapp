;(function(window) {

  var svgSprite = '<svg>' +
    '' +
    '<symbol id="icon-mulu1" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M103.053241 264.933517l49.399172 0c17.319724 0 31.355586-15.872 31.355586-45.144276 0-29.289931-14.018207-43.590621-31.355586-43.590621L103.053241 176.198621c-17.319724 0-31.355586 14.30069-31.355586 43.590621C71.697655 249.061517 85.715862 264.933517 103.053241 264.933517zM329.074759 264.933517l583.115034 0c22.174897 0 40.112552-15.872 40.112552-45.144276 0-29.289931-17.95531-43.590621-40.112552-43.590621L329.074759 176.198621c-22.157241 0-40.112552 14.30069-40.112552 43.590621C288.962207 249.061517 306.899862 264.933517 329.074759 264.933517zM154.394483 492.279172l-52.082759 0c-16.260414 0-29.431172 17.496276-29.431172 43.378759 0 25.935448 13.170759 46.062345 29.431172 46.062345l52.082759 0c16.260414 0 33.809655-20.144552 33.809655-46.062345C188.204138 509.793103 170.654897 492.279172 154.394483 492.279172zM912.189793 492.279172 329.074759 492.279172c-22.157241 0-40.112552 17.496276-40.112552 43.378759 0 25.935448 17.95531 46.062345 40.112552 46.062345l583.115034 0c22.174897 0 40.112552-20.144552 40.112552-46.062345C952.302345 509.793103 934.36469 492.279172 912.189793 492.279172zM155.365517 774.338207 105.207172 774.338207c-15.730759 0-28.460138 17.584552-28.460138 43.449379s12.729379 47.65131 28.460138 47.65131L155.365517 865.438897c15.730759 0 32.820966-21.786483 32.820966-47.65131S171.096276 774.338207 155.365517 774.338207zM912.189793 774.338207 329.074759 774.338207c-22.157241 0-40.112552 17.584552-40.112552 43.449379s17.95531 46.415448 40.112552 46.415448l583.115034 0c22.174897 0 40.112552-20.550621 40.112552-46.415448S934.36469 774.338207 912.189793 774.338207z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-qingbaitian" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M510.642584 274.283923c131.98194 0 238.97065 106.997919 238.97065 238.978836 0 131.979894-106.989733 238.987023-238.97065 238.987023S271.661701 645.242653 271.661701 513.26276C271.661701 381.28082 378.660644 274.283923 510.642584 274.283923L510.642584 274.283923zM510.642584 342.566076c-94.275153 0-170.70487 76.422554-170.70487 170.696684 0 94.266967 76.429717 170.696684 170.70487 170.696684 94.273107 0 170.69566-76.429717 170.69566-170.696684C681.337221 418.989653 604.915691 342.566076 510.642584 342.566076L510.642584 342.566076zM507.433496 13.974269c20.620643 0 37.338397 129.800251 37.338397 150.421918 0 20.621667-16.717753 37.341466-37.338397 37.341466-20.621667 0-37.341466-16.718777-37.341466-37.341466C470.09203 143.774521 486.81183 13.974269 507.433496 13.974269L507.433496 13.974269zM153.496441 162.348552c-14.588253 14.585183 65.385173 118.187773 79.96524 132.773979 14.57802 14.57802 38.220487 14.57802 52.800553 0 14.585183-14.585183 14.585183-38.229696 0-52.807716C271.682167 227.733725 168.074462 147.762345 153.496441 162.348552L153.496441 162.348552zM8.136819 517.535063c0-20.615527 129.801275-37.340443 150.422941-37.340443 20.621667 0 37.33942 16.718777 37.33942 37.346583 0 20.615527-16.71673 37.332257-37.33942 37.332257C137.938094 554.874483 8.136819 538.15673 8.136819 517.535063L8.136819 517.535063zM156.510078 871.477234c14.585183 14.57188 118.187773-65.385173 132.772956-79.969333 14.57802-14.572904 14.57802-38.21537 0-52.788274-14.585183-14.586207-38.22765-14.586207-52.807716 0C221.896274 753.292532 141.923872 856.906377 156.510078 871.477234L156.510078 871.477234zM511.69659 1016.836857c-20.614503 0-37.33328-129.813554-37.33328-150.428058 0-20.615527 16.711614-37.341466 37.340443-37.341466 20.615527 0 37.332257 16.72594 37.332257 37.341466C549.03601 887.023302 532.318256 1016.836857 511.69659 1016.836857L511.69659 1016.836857zM865.647971 868.463598c14.58723-14.585183-65.401546-118.186749-79.971379-132.772956-14.572904-14.585183-38.21537-14.585183-52.801577 0-14.585183 14.586207-14.585183 38.22765 0 52.813856C747.460198 803.076378 851.062787 883.050828 865.647971 868.463598L865.647971 868.463598zM1011.005546 513.269923c0 20.621667-129.813554 37.340443-150.428058 37.340443-20.629853 0-37.341466-16.71059-37.341466-37.340443 0-20.614503 16.711614-37.33942 37.341466-37.33942C881.191992 475.937666 1011.005546 492.65542 1011.005546 513.269923L1011.005546 513.269923zM862.620008 159.332868c-14.58723-14.585183-118.186749 65.379033-132.772956 79.9591-14.57188 14.585183-14.57188 38.228673 0 52.806693 14.586207 14.580067 38.22765 14.580067 52.813856 0C797.246091 277.520641 877.206214 173.912935 862.620008 159.332868z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-yuyin" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M237.746 509.71l435.744-424.377 49.258 48.311-386.486 376.066 386.486 377.014-49.258 47.364z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-ziti1" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M594.432 860.16L332.288 132.096c-4.096-13.824-16.896-24.064-32.256-24.064-14.848 0-27.136 9.216-31.744 22.528L3.072 858.112c-1.024 1.536-1.536 3.584-2.048 5.632-0.512 2.56-1.024 5.632-1.024 8.704 0 18.432 14.848 33.792 33.28 33.792 14.848 0 27.136-9.728 31.744-23.04l100.352-275.456h266.24l99.84 276.48c4.608 12.8 16.896 21.504 31.232 21.504 18.432 0 33.792-14.848 33.792-33.792 0-4.096-0.512-8.192-2.048-11.776z m-403.968-320l109.568-300.544 108.032 300.544H190.464zM1024 594.944c-0.512-17.92-15.36-32.256-33.28-32.256s-32.768 14.336-33.28 32.256v5.632c-30.208-24.064-68.096-38.4-109.568-38.4-97.792 0-176.64 79.36-176.64 176.64s79.36 176.64 176.64 176.64c41.472 0 79.36-14.336 109.568-38.4v6.144c1.024 17.92 15.36 31.744 33.28 31.744s32.768-14.336 33.28-31.744v-288.256z m-176.64 254.464c-60.928 0-110.08-49.152-110.08-110.08s49.152-110.08 110.08-110.08c57.344 0 104.448 44.032 109.568 99.84v20.48c-5.12 55.808-52.224 99.84-109.568 99.84z" fill="" ></path>' +
    '' +
    '</symbol>' +
    '' +
    '<symbol id="icon-yejian1" viewBox="0 0 1024 1024">' +
    '' +
    '<path d="M910.944 543.862h0.032c-36 187.68-199.392 329.472-395.712 329.472-222.72 0-403.264-182.4-403.264-407.392 0-184.896 122.208-340.192 289.312-389.856 3.936-1.76 8.288-2.752 12.896-2.752 17.824 0 32.256 14.592 32.256 32.576-123.936 315.552 127.712 543.776 433.28 397.44 17.824 0 32.256 14.592 32.256 32.576 0 2.784-0.448 5.408-1.056 7.936z"  ></path>' +
    '' +
    '</symbol>' +
    '' +
    '</svg>'
  var script = function() {
    var scripts = document.getElementsByTagName('script')
    return scripts[scripts.length - 1]
  }()
  var shouldInjectCss = script.getAttribute("data-injectcss")

  /**
   * document ready
   */
  var ready = function(fn) {
    if (document.addEventListener) {
      if (~["complete", "loaded", "interactive"].indexOf(document.readyState)) {
        setTimeout(fn, 0)
      } else {
        var loadFn = function() {
          document.removeEventListener("DOMContentLoaded", loadFn, false)
          fn()
        }
        document.addEventListener("DOMContentLoaded", loadFn, false)
      }
    } else if (document.attachEvent) {
      IEContentLoaded(window, fn)
    }

    function IEContentLoaded(w, fn) {
      var d = w.document,
        done = false,
        // only fire once
        init = function() {
          if (!done) {
            done = true
            fn()
          }
        }
        // polling for no errors
      var polling = function() {
        try {
          // throws errors until after ondocumentready
          d.documentElement.doScroll('left')
        } catch (e) {
          setTimeout(polling, 50)
          return
        }
        // no errors, fire

        init()
      };

      polling()
        // trying to always fire before onload
      d.onreadystatechange = function() {
        if (d.readyState == 'complete') {
          d.onreadystatechange = null
          init()
        }
      }
    }
  }

  /**
   * Insert el before target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var before = function(el, target) {
    target.parentNode.insertBefore(el, target)
  }

  /**
   * Prepend el to target
   *
   * @param {Element} el
   * @param {Element} target
   */

  var prepend = function(el, target) {
    if (target.firstChild) {
      before(el, target.firstChild)
    } else {
      target.appendChild(el)
    }
  }

  function appendSvg() {
    var div, svg

    div = document.createElement('div')
    div.innerHTML = svgSprite
    svgSprite = null
    svg = div.getElementsByTagName('svg')[0]
    if (svg) {
      svg.setAttribute('aria-hidden', 'true')
      svg.style.position = 'absolute'
      svg.style.width = 0
      svg.style.height = 0
      svg.style.overflow = 'hidden'
      prepend(svg, document.body)
    }
  }

  if (shouldInjectCss && !window.__iconfont__svg__cssinject__) {
    window.__iconfont__svg__cssinject__ = true
    try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (e) {
      console && console.log(e)
    }
  }

  ready(appendSvg)


})(window)